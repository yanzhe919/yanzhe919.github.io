
debian安装nvm管理安装nodejs
https://github.com/creationix/nvm
安装
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash

If the above doesn't fix the problem, open your .bash_profile and add the following line of code:

source ~/.bashrc

 现在你已经安装了nvm，可以安装独立的Node.js版本。

要找出可用于安装的Node.js的版本，可以键入：

nvm ls-remote


nvm install node/nvm install v8.7.0

 通常，nvm将切换到使用最近安装的版本。您可以明确告诉nvm使用我们刚刚下载的版本：

nvm use 6.9.2

您可以通过键入以下内容查看shell当前使用的版本：

node -v

And then in any new shell just use the installed version:

nvm use node

Or you can just run it:

nvm run node --version

Or, you can run any arbitrary command in a subshell with the desired version of node:

nvm exec 4.2 node --version

You can also get the path to the executable to where it was installed:

nvm which 5.0

 如果您有多个Node.js版本，您可以通过键入以下内容查看安装的版本：

nvm ls

如果您希望将其中一个版本设置为默认值，可以键入：

nvm alias default 6.9.2
 当您打开新的终端会话时，将自动选择此版本。您还可以通过别名引用它，如下所示：

nvm use default

 Node.js的的每个版本都将保持自己的包的轨道，有npm可用于管理这些。

你可以有npm安装软件包Node.js的项目./node_modules使用普通格式的目录。 例如，对于express模块：

npm install express

如果您想在全球范围内（其提供给使用相同版本的Node.js其他项目）安装它，你可以添加-g标志：

npm install -g express

这将安装软件包：

~/.nvm/node_version/lib/node_modules/package_name

全局安装将允许您从命令行运行命令，但是您必须将软件包链接到您的本地范围，以从程序中要求它：

npm link express

您可以通过输入以下命令，了解有关nvm可用选项的更多信息：

nvm help

结论

如你所见，在Debian 8服务器上有很多方法可以启动和运行Node.js。你的情况将决定上述哪种方法是你的情况的最好的想法。而在Ubuntu的信息库的打包版本是最简单的，所述nvm方法绝对是灵活得多。
 
